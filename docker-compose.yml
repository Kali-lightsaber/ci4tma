version: '3'
services:
  phabricator:
    ports:
     - "443:443"
     - "80:80"
     - "2222:22"
    volumes:
     - /opt/cpms/phab/repos:/repos
     - /opt/cpms/phab/extensions:/srv/phabricator/phabricator/src/extensions
     - /opt/cpms/phab/sshkeys:/sshkeys
     - /opt/cpms/phab/filestore:/filestore
    depends_on:
     - mysql
    deploy:
      placement:
        constraints: [node.role == manager]
    environment:
     - MYSQL_HOST=mysql
     - MYSQL_USER=root
     - MYSQL_PASS=phabricator
     - PHABRICATOR_REPOSITORY_PATH=/repos
     - PHABRICATOR_HOST=
     - PHABRICATOR_HOST_KEYS_PATH=/sshkeys
     - PHABRICATOR_STORAGE_TYPE=disk
     - PHABRICATOR_STORAGE_PATH=/filestore
     - PHABRICATOR_VCS_PORT=2222
    image: redpointgames/phabricator
  mysql:
    volumes:
     - /opt/cpms/phab/mysql:/var/lib/mysql
    image: mysql:5.7.14
    environment:
     - MYSQL_ROOT_PASSWORD=phabricator
    deploy:
      placement:
        constraints: [node.role == manager]
  jenkins:
    image: jenkinsci/jenkins:lts
    ports:
      - "8080:8080"
    volumes:
      - /opt/cpms/jenkins:/var/jenkins_home
    environment:
      - JAVA_OPTS=-Dhttp.proxyHost=10.10.10.10 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=10.10.10.10 -Dhttps.proxyPort=8080
    deploy:
      placement:
        constraints: [node.role == manager]
  artifactory:
    image: docker.bintray.io/jfrog/artifactory-oss:latest
    ports:
     - "8081:8081"
    volumes:
     - /opt/cpms/artifactory:/var/opt/jfrog/artifactory
    deploy:
      placement:
        constraints: [node.role == manager]
    
  sonarqube:
    image: sonarqube
    ports:
      - "8082:9000"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgre:5432/sonar
    volumes:
      - /opt/cpms/sonarqube/conf:/opt/sonarqube/conf
      - /opt/cpms/sonarqube/data:/opt/sonarqube/data
      - /opt/cpms/sonarqube/extensions:/opt/sonarqube/extensions
      - /opt/cpms/sonarqube/bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    deploy:
      placement:
        constraints: [node.role == manager]
  postgre:
    
    image: postgres
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - /opt/cpms/sonarqube/postgresql:/var/lib/postgresql
      - /opt/cpms/sonarqube/postgresql/data:/var/lib/postgresql/data
    deploy:
      placement:
        constraints: [node.role == manager]


